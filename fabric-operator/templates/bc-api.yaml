apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bff-apis
  name: {{ .Values.bcapi.name }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: bff-apis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: bff-apis
    spec:
      containers:
      - env:
        - name: DEFAULT_INGRESS_CLASS
          value: {{ .Values.ingressClassName }}
        - name: DEFAULT_STORAGE_CLASS
          value: {{ .Values.storageClassName }}
        - name: IAM_PROVIDER_URL
          value: {{ .Values.iamServer }}
        - name: K8S_OIDC_PROXY_URL
          value: {{ .Values.bcapi.env.k8sOIDCProxyURL }}
        - name: OIDC_SERVER_URL
          value: {{ .Values.bcapi.env.OIDCServerURL }}
        - name: OIDC_SERVER_CLIENT_ID
          value: {{ .Values.bcapi.env.OIDCServerClientID }}
        - name: OIDC_SERVER_CLIENT_SECRET
          value: {{ .Values.bcapi.env.OIDCServerClientSecret }}
        - name: K8S_API_TIMEOUT
          value: "10"
        image: {{ .Values.bcapi.image }}
        imagePullPolicy: {{ .Values.bcapi.imagePullPolicy }}
        livenessProbe:
          failureThreshold: 4
          httpGet:
            path: /health
            port: 8024
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        name: bc-apis
        ports:
        - containerPort: 8024
          protocol: TCP
        readinessProbe:
          failureThreshold: 4
          httpGet:
            path: /health
            port: 8024
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/localtime
          name: time-localtime
          readOnly: true
      dnsPolicy: ClusterFirst
      hostAliases:
{{ toYaml .Values.bcapi.hostAliases | nindent 8 }}
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /etc/localtime
          type: ""
        name: time-localtime