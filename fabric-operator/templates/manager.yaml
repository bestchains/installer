apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: {{ .Values.namespace }}
  labels:
    control-plane: controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      name: controller-manager
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        control-plane: controller-manager
        name: controller-manager
    spec:
      containers:
      - command:
        - ibp-operator
        env:
        - name: WATCH_NAMESPACE
          value: {{ .Values.operator.watchNamespace }}
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OPERATOR_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: CLUSTERTYPE
          value: {{ .Values.operator.clusterType }}
        - name: OPERATOR_INGRESS_CLASS
          value: {{ .Values.ingressClassName}}
        - name: OPERATOR_INGRESS_DOMAIN
          value: {{ .Values.ingressDomain }}
        - name: OPERATOR_IAM_SERVER
          value: {{ .Values.iamServer }}
        image: {{ .Values.operator.image }}
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8383
          timeoutSeconds: 5
        name: operator
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          {{ toYaml .Values.operator.readinessProbe | nindent 12 }}
        resources:
          {{ toYaml .Values.operator.resources | nindent 12 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            - FOWNER
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      tolerations:
      {{ toYaml .Values.operator.tolerations | nindent 6 }}
      affinity:
      {{ toYaml .Values.operator.affinity | nindent 8 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1001
      serviceAccount: operator-controller-manager
      serviceAccountName: operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
