{{- if .Values.ingress.enable }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    description: bc-saas-ingress
    displayName: bc-saas-ingress
    httpSend: /
    ingress-lb: {{ .Values.ingress.ingressClassName }}
    kubernetes.io/ingress.class:  {{ .Values.ingress.ingressClassName }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_cache static-cache;
      proxy_cache_valid 404 10m;
      proxy_cache_use_stale error timeout updating http_404 http_500 http_502 http_503 http_504;
      proxy_cache_bypass $http_x_purge;
      add_header X-Cache-Status $upstream_cache_status; # check X-Cache-Status to see if it's HIT
    nginx.ingress.kubernetes.io/enable-access-log: "false"
    nginx.ingress.kubernetes.io/enable-rewrite-log: "false"
    nginx.ingress.kubernetes.io/load-balance: round_robin
    nginx.ingress.kubernetes.io/proxy-body-size: ""
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/server-alias: ""
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: $host
  labels:
    ingress-lb: {{ .Values.ingress.ingressClassName }}
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Release.Name }}.{{ .Values.ingress.ingressDomain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: {{ .Values.runtimeArgs.port }}
        path: /
        pathType: ImplementationSpecific
{{- end }}